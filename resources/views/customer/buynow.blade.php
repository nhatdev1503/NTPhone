@include('layouts.customer.header')

@php
    $user = Auth::user();
@endphp

<div class="container cart-container">
    <h2 class="page-title">üõí Gi·ªè h√†ng c·ªßa b·∫°n</h2>
    <div id="notification-container" class="notification-container"></div>
    <form id="checkout-form" action="{{ route('customer.cart.checkout') }}" method="POST">
        @csrf

        <div class="main-grid">
            <div class="left-col">
                <div class="product-list-container">
                    <table class="product-table" id="cart-table">
                        <thead>
                            <tr>
                                <th>S·∫£n ph·∫©m</th>
                                <th>Gi√° (‚Ç´)</th>
                                <th>T·∫°m t√≠nh (‚Ç´)</th>
                                <th>Ch·ªçn t·∫•t c·∫£ <input type="checkbox" id="select-all" title="Ch·ªçn t·∫•t c·∫£"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @php $subTotal = 0; @endphp
                                <tr class="cart-item" data-price="{{ $price }}"
                                    data-cart-id=""
                                    data-default-color="{{ $product_variant->color }}"
                                    data-default-storage="{{ $product_variant->storage }}">
                                    <td>
                                        <div class="product-cell">
                                            <img src="{{ asset($product_variant->product->image) }}"
                                                alt="{{ $product_variant->product->name }}" class="product-image">
                                            <div class="product-details">
                                                <span class="product-name">
                                                    {{ $product_variant->product->name ?? 'S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i' }}
                                                </span>
                                                <div class="variant-info">
                                                    @if ($colors->count() <= 1 && $storages->count() <= 1)
                                                        <span class="variant-static">
                                                            {{ $product_variant->color }} -
                                                            {{ $product_variant->storage }}
                                                        </span>
                                                    @else
                                                        <div class="variant-selectors">
                                                            @if ($colors->count() > 1)
                                                                <select class="variant-color"
                                                                    data-cart-id="">
                                                                    @foreach ($colors as $color)
                                                                        <option value="{{ $color }}"
                                                                            {{ $product_variant->color == $color ? 'selected' : '' }}>
                                                                            {{ $color }}
                                                                        </option>
                                                                    @endforeach
                                                                </select>
                                                            @endif
                                                            @if ($storages->count() > 1)
                                                                <select class="variant-storage"
                                                                    data-cart-id="">
                                                                    @foreach ($storages as $storage)
                                                                        <option value="{{ $storage }}"
                                                                            {{ $product_variant->storage == $storage ? 'selected' : '' }}>
                                                                            {{ $storage }}
                                                                        </option>
                                                                    @endforeach
                                                                </select>
                                                            @endif
                                                            <span class="spinner" style="display: none;">
                                                                <i class="fas fa-spinner fa-spin"></i>
                                                            </span>
                                                        </div>
                                                    @endif
                                                    <button type="button" class="btn-delete"
                                                        data-cart-id="" title="X√≥a">
                                                        <i class="fas fa-trash-alt"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="price-cell">
                                        <div class="quantity-control">
                                            <button type="button" class="btn-decrease"
                                                data-cart-id="">-</button>
                                            <input type="number" name="quantities[]"
                                                value="" min="1" max="5"
                                                class="qty-input" data-cart-id="">
                                            <button type="button" class="btn-increase"
                                                data-cart-id="">+</button>
                                        </div>
                                        <div class="price">
                                            {{ number_format($price, 0, ',', '.') }}‚Ç´
                                        </div>
                                    </td>
                                    <td class="item-subtotal">
                                        {{ number_format($itemSubTotal, 0, ',', '.') }}
                                    </td>
                                    <td class="action-cell">
                                        <input type="checkbox" name="selected_items[]" value="{{ $cart->id }}"
                                            class="item-checkbox">
                                    </td>
                                </tr>
                        </tbody>
                    </table>
                </div>

                <div class="total-amount">
                    <span>T·∫°m t√≠nh: </span>
                    <span id="sub-total">{{ number_format($subTotal, 0, ',', '.') }}‚Ç´</span>
                </div>

                <div class="user-info-section">
                    <div class="card user-info-card">
                        <div class="card-body">
                            <div class="user-info-header">
                                <h3 class="section-title">Th√¥ng tin kh√°ch h√†ng</h3>
                                <button type="button" class="toggle-user-info">
                                    <i class="fas fa-chevron-down"></i>
                                </button>
                            </div>
                            <div class="user-info-content">
                                <p class="section-title" style="color: #6f42c1; font-size: 12px; padding: 0 0 0 0;">
                                    (Th√¥ng tin n√†y ch·ªâ √°p d·ª•ng cho ƒë∆°n h√†ng, kh√¥ng thay ƒë·ªïi t√†i kho·∫£n c·ªßa b·∫°n.)
                                </p>
                                <div class="form-group">
                                    <label for="fullname">H·ªç t√™n</label>
                                    <input type="text" name="fullname" id="fullname" class="form-input" required
                                        value="{{ $user->fullname }}">
                                </div>
                                <div class="form-group">
                                    <label for="address">ƒê·ªãa ch·ªâ</label>
                                    <input type="text" name="address" id="address" class="form-input" required
                                        value="{{ $user->address }}">
                                </div>
                                <div class="form-group">
                                    <label for="phone">S·ªë ƒëi·ªán tho·∫°i</label>
                                    <input type="text" name="phone" id="phone" class="form-input" required
                                        value="{{ $user->phone }}">
                                </div>
                                <div class="form-group">
                                    <label for="email">Email</label>
                                    <input type="email" name="email" id="email" class="form-input" required
                                        value="{{ $user->email }}">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="right-col">
                <div class="payment-voucher-section">
                    <div class="card payment-card">
                        <div class="card-body">
                            <h3 class="section-title">Thanh to√°n & Voucher</h3>
                            <div class="form-group payment-method">
                                <label>Ph∆∞∆°ng th·ª©c thanh to√°n</label>
                                <div class="radio-group">
                                    <div class="radio-item">
                                        <input type="radio" name="payment_method" id="COD" value="COD"
                                            checked>
                                        <label for="COD">Thanh to√°n khi nh·∫≠n h√†ng</label>
                                    </div>
                                    <div class="radio-item">
                                        <input type="radio" name="payment_method" id="VNPay" value="VNPay">
                                        <label for="VNPay">Thanh to√°n qua v√≠ VNPay</label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="voucher_code">Voucher (n·∫øu c√≥)</label>
                                <div class="voucher-group">
                                    <input type="text" name="voucher_code" id="voucher_code"
                                        placeholder="Nh·∫≠p m√£ voucher" class="form-input">
                                    <button type="button" id="apply-voucher" class="btn-apply-voucher">√Åp
                                        d·ª•ng</button>
                                </div>
                            </div>
                            <div class="voucher-list" id="voucher-list-container">
                                <h4>Voucher kh·∫£ d·ª•ng:</h4>
                                <ul id="voucher-list">
                                    @foreach ($activeVouchers as $index => $voucher)
                                        <li
                                            class="voucher-item @if ($index >= 3) hidden-voucher @endif">
                                            <span>{{ $voucher->code }}</span> -
                                            @if ($voucher->discount_type == 'percentage')
                                                Gi·∫£m {{ $voucher->discount_value }}%
                                                @if ($voucher->max_discount_value)
                                                    (t·ªëi ƒëa
                                                    {{ number_format($voucher->max_discount_value, 0, ',', '.') }}‚Ç´)
                                                @endif
                                            @else
                                                Gi·∫£m c·ªë ƒë·ªãnh
                                                {{ number_format($voucher->discount_value, 0, ',', '.') }}‚Ç´
                                            @endif
                                            @if ($voucher->min_order_value)
                                                - ƒê∆°n t·ªëi thi·ªÉu
                                                {{ number_format($voucher->min_order_value, 0, ',', '.') }}‚Ç´
                                            @endif
                                            - H·∫øt h·∫°n:
                                            {{ \Carbon\Carbon::parse($voucher->expiration_date)->format('d/m/Y') }}
                                            <button type="button" class="btn-use-voucher"
                                                data-code="{{ $voucher->code }}">D√πng</button>
                                        </li>
                                    @endforeach
                                </ul>
                                @if ($activeVouchers->count() > 3)
                                    <button type="button" id="toggle-voucher-list" class="btn-toggle-voucher">
                                        Xem th√™m <i class="fas fa-chevron-down"></i>
                                    </button>
                                @endif
                            </div>
                            <div class="voucher-info" id="voucher-info" style="display: none;">
                                <p><strong>Voucher:</strong> <span id="voucher-code-display"></span></p>
                                <p><strong>Gi·∫£m:</strong> <span id="voucher-discount-display"></span>‚Ç´</p>
                                <button type="button" id="remove-voucher" class="btn-remove-voucher">H·ªßy b·ªè</button>
                            </div>
                        </div>
                        <div class="final-total">
                            <p class="cart-info">
                                S·∫£n ph·∫©m trong gi·ªè: <span id="total-items">{{ $carts->count() }}</span> <br>
                                S·∫£n ph·∫©m ƒë√£ ch·ªçn: <span id="selected-items">0</span>
                            </p>
                            <div class="total-amount final-amount">
                                <span>T·ªïng ti·ªÅn: </span>
                                <span id="final-total">{{ number_format($subTotal, 0, ',', '.') }}‚Ç´</span>
                            </div>
                            <div class="agree-check">
                                <input type="checkbox" name="agree" id="agree" class="form-check-input"
                                    required>
                                <label for="agree" style="color: white" class="form-check-label">
                                    T√¥i ƒë√£ ƒë·ªçc v√† ƒë·ªìng √Ω v·ªõi <a href="#" id="terms-link"
                                        class="terms-link">ƒëi·ªÅu kho·∫£n thanh to√°n</a>
                                </label>
                            </div>
                            <button type="submit" class="btn-checkout">Ho√†n t·∫•t thanh to√°n</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>

    <!-- Popup ƒêi·ªÅu kho·∫£n -->
    <div id="terms-popup" class="popup">
        <div class="popup-content">
            <h2>ƒêi·ªÅu kho·∫£n mua ƒëi·ªán tho·∫°i</h2>
            <div class="terms-content">
                <p><strong>1. Quy ƒë·ªãnh chung:</strong> Khi mua ƒëi·ªán tho·∫°i t·∫°i c·ª≠a h√†ng c·ªßa ch√∫ng t√¥i, b·∫°n ƒë·ªìng √Ω tu√¢n
                    th·ªß c√°c ƒëi·ªÅu kho·∫£n v√† ƒëi·ªÅu ki·ªán ƒë∆∞·ª£c li·ªát k√™ d∆∞·ªõi ƒë√¢y.</p>
                <p><strong>2. Thanh to√°n:</strong> Thanh to√°n c√≥ th·ªÉ ƒë∆∞·ª£c th·ª±c hi·ªán qua COD ho·∫∑c VNPay. ƒê∆°n h√†ng ch·ªâ
                    ƒë∆∞·ª£c x√°c nh·∫≠n sau khi thanh to√°n ho√†n t·∫•t (ƒë·ªëi v·ªõi VNPay) ho·∫∑c khi b·∫°n nh·∫≠n h√†ng (ƒë·ªëi v·ªõi COD).</p>
                <p><strong>3. B·∫£o h√†nh:</strong> ƒêi·ªán tho·∫°i ƒë∆∞·ª£c b·∫£o h√†nh theo ch√≠nh s√°ch c·ªßa nh√† s·∫£n xu·∫•t (th∆∞·ªùng 12
                    th√°ng). Vui l√≤ng gi·ªØ h√≥a ƒë∆°n ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ b·∫£o h√†nh.</p>
                <p><strong>4. ƒê·ªïi tr·∫£:</strong> S·∫£n ph·∫©m ƒë∆∞·ª£c ƒë·ªïi tr·∫£ trong v√≤ng 7 ng√†y n·∫øu c√≥ l·ªói t·ª´ nh√† s·∫£n xu·∫•t. S·∫£n
                    ph·∫©m ph·∫£i c√≤n nguy√™n v·∫πn, kh√¥ng tr·∫ßy x∆∞·ªõc, ƒë·∫ßy ƒë·ªß ph·ª• ki·ªán v√† h√≥a ƒë∆°n.</p>
                <p><strong>5. Giao h√†ng:</strong> Th·ªùi gian giao h√†ng t·ª´ 2-5 ng√†y l√†m vi·ªác, t√πy thu·ªôc v√†o ƒë·ªãa ch·ªâ nh·∫≠n
                    h√†ng. Chi ph√≠ v·∫≠n chuy·ªÉn s·∫Ω ƒë∆∞·ª£c th√¥ng b√°o tr∆∞·ªõc.</p>
                <p><strong>6. Tr√°ch nhi·ªám:</strong> Ch√∫ng t√¥i kh√¥ng ch·ªãu tr√°ch nhi·ªám v·ªÅ h∆∞ h·ªèng do ng∆∞·ªùi d√πng g√¢y ra sau
                    khi nh·∫≠n h√†ng.</p>
                <p><strong>7. Thay ƒë·ªïi ƒëi·ªÅu kho·∫£n:</strong> Ch√∫ng t√¥i c√≥ quy·ªÅn c·∫≠p nh·∫≠t ƒëi·ªÅu kho·∫£n m√† kh√¥ng c·∫ßn th√¥ng
                    b√°o tr∆∞·ªõc. Vui l√≤ng ki·ªÉm tra l·∫°i tr∆∞·ªõc khi ƒë·∫∑t h√†ng.</p>
            </div>
            <button id="close-terms" class="btn-close-popup">ƒê√≥ng</button>
        </div>
    </div>
</div>

<script>
    const activeVouchers = {!! json_encode(
        $activeVouchers->map(function ($voucher) {
                return [
                    'code' => $voucher->code,
                    'discount_type' => $voucher->discount_type,
                    'discount_value' => $voucher->discount_value,
                    'min_order_value' => $voucher->min_order_value ?? 0,
                    'max_discount_value' => $voucher->max_discount_value ?? null,
                ];
            })->toArray(),
    ) !!};

    // X·ª≠ l√Ω thay ƒë·ªïi bi·∫øn th·ªÉ
    document.querySelectorAll('.variant-color, .variant-storage').forEach(function(select) {
        select.addEventListener('change', function() {
            const cartId = this.getAttribute('data-cart-id');
            const row = document.querySelector(`tr[data-cart-id="${cartId}"]`);
            const colorSelect = document.querySelector(`.variant-color[data-cart-id="${cartId}"]`);
            const storageSelect = document.querySelector(`.variant-storage[data-cart-id="${cartId}"]`);
            const spinner = this.parentElement.querySelector('.spinner');

            const color = colorSelect ? colorSelect.value : row.getAttribute('data-default-color');
            const storage = storageSelect ? storageSelect.value : row.getAttribute(
                'data-default-storage');

            spinner.style.display = 'inline-block';

            fetch("{{ route('customer.cart.updateVariant') }}", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': "{{ csrf_token() }}"
                    },
                    body: JSON.stringify({
                        cart_id: cartId,
                        color: color,
                        storage: storage
                    })
                })
                .then(response => response.json())
                .then(data => {
                    spinner.style.display = 'none';
                    if (data.success) {
                        const priceCell = row.querySelector('.price');
                        const itemSubtotalCell = row.querySelector('.item-subtotal');
                        const qty = parseInt(row.querySelector('.qty-input').value);

                        row.setAttribute('data-price', data.price);
                        priceCell.innerText = data.price.toLocaleString('vi-VN') + '‚Ç´';
                        itemSubtotalCell.innerText = (data.price * qty).toLocaleString('vi-VN') +
                            '‚Ç´';

                        row.setAttribute('data-default-color', color);
                        row.setAttribute('data-default-storage', storage);

                        updateTotals();
                        showNotification('ƒê√£ c·∫≠p nh·∫≠t bi·∫øn th·ªÉ th√†nh c√¥ng!', 'success');
                    } else {
                        showNotification(data.message || 'C√≥ l·ªói khi c·∫≠p nh·∫≠t bi·∫øn th·ªÉ.', 'error');
                    }
                })
                .catch(error => {
                    spinner.style.display = 'none';
                    console.error('L·ªói:', error);
                    showNotification('C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t bi·∫øn th·ªÉ.', 'error');
                });
        });
    });

    // H√†m hi·ªÉn th·ªã th√¥ng b√°o
    function showNotification(message, type = 'success') {
        const container = document.getElementById('notification-container');
        const notification = document.createElement('div');
        notification.classList.add('notification', type);
        notification.textContent = message;
        container.appendChild(notification);
        setTimeout(() => notification.classList.add('show'), 10);
        setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => notification.remove(), 500);
        }, 3000);
    }

    // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn
    function updateTotals() {
        let subTotal = 0;
        let selectedSubTotal = 0;
        let selectedCount = 0;

        document.querySelectorAll('#cart-table tbody tr.cart-item').forEach(function(row) {
            const price = parseFloat(row.getAttribute('data-price'));
            const qtyInput = row.querySelector('.qty-input');
            const quantity = parseInt(qtyInput.value);
            const itemSubtotal = price * quantity;
            const isChecked = row.querySelector('.item-checkbox').checked;

            row.querySelector('.item-subtotal').innerText = itemSubtotal.toLocaleString('vi-VN') + '‚Ç´';
            subTotal += itemSubtotal;
            if (isChecked) {
                selectedSubTotal += itemSubtotal;
                selectedCount++;
            }
        });

        document.getElementById('sub-total').innerText = subTotal.toLocaleString('vi-VN') + '‚Ç´';
        document.getElementById('total-items').innerText = document.querySelectorAll('.cart-item').length;
        document.getElementById('selected-items').innerText = selectedCount;

        const finalTotal = window.appliedDiscount ? Math.max(selectedSubTotal - window.appliedDiscount, 0) :
            selectedSubTotal;
        document.getElementById('final-total').innerText = finalTotal.toLocaleString('vi-VN') + '‚Ç´';
    }

    // AJAX c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng
    function updateCart(cartId, quantity) {
        fetch("{{ route('customer.cart.update', '') }}/" + cartId, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': "{{ csrf_token() }}"
                },
                body: JSON.stringify({
                    quantity: quantity
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log('S·ªë l∆∞·ª£ng ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t tr√™n server.');
                } else {
                    showNotification('C√≥ l·ªói khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng.', 'error');
                }
            })
            .catch(error => {
                console.error('L·ªói:', error);
                showNotification('C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng.', 'error');
            });
    }

    // N√∫t tƒÉng/gi·∫£m s·ªë l∆∞·ª£ng
    document.querySelectorAll('.btn-decrease').forEach(function(btn) {
        btn.addEventListener('click', function() {
            const cartId = this.getAttribute('data-cart-id');
            const input = document.querySelector('.qty-input[data-cart-id="' + cartId + '"]');
            let qty = parseInt(input.value);
            if (qty > 1) {
                input.value = --qty;
                updateTotals();
                updateCart(cartId, qty);
            }
        });
    });

    document.querySelectorAll('.btn-increase').forEach(function(btn) {
        btn.addEventListener('click', function() {
            const cartId = this.getAttribute('data-cart-id');
            const input = document.querySelector('.qty-input[data-cart-id="' + cartId + '"]');
            let qty = parseInt(input.value);
            if (qty < 5) {
                input.value = ++qty;
                updateTotals();
                updateCart(cartId, qty);
            }
        });
    });

    document.querySelectorAll('.qty-input').forEach(function(input) {
        input.addEventListener('change', function() {
            let qty = parseInt(this.value);
            if (qty < 1) qty = 1;
            if (qty > 5) qty = 5;
            this.value = qty;
            updateTotals();
            const cartId = this.getAttribute('data-cart-id');
            updateCart(cartId, qty);
        });
    });

    // Checkbox x·ª≠ l√Ω
    document.querySelectorAll('.item-checkbox').forEach(function(checkbox) {
        checkbox.addEventListener('change', updateTotals);
    });

    document.getElementById('select-all').addEventListener('change', function() {
        const isChecked = this.checked;
        document.querySelectorAll('.item-checkbox').forEach(function(checkbox) {
            checkbox.checked = isChecked;
        });
        updateTotals();
    });

    // X·ª≠ l√Ω submit form
    document.getElementById('checkout-form').addEventListener('submit', function(e) {
        const selectedItems = document.querySelectorAll('.item-checkbox:checked');
        if (selectedItems.length === 0) {
            e.preventDefault();
            showNotification('Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt s·∫£n ph·∫©m ƒë·ªÉ ƒë·∫∑t h√†ng!', 'error');
        }
    });

    // Voucher x·ª≠ l√Ω
    document.getElementById('apply-voucher').addEventListener('click', function() {
        const code = document.getElementById('voucher_code').value.trim();
        if (code === '') {
            showNotification('Vui l√≤ng nh·∫≠p m√£ voucher!', 'error');
            return;
        }
        applyVoucher(code);
    });

    document.querySelectorAll('.btn-use-voucher').forEach(function(btn) {
        btn.addEventListener('click', function() {
            const code = this.getAttribute('data-code');
            document.getElementById('voucher_code').value = code;
            applyVoucher(code);
        });
    });

    document.getElementById('remove-voucher')?.addEventListener('click', function() {
        window.appliedDiscount = 0;
        document.getElementById('voucher_code').value = '';
        document.getElementById('voucher-info').style.display = 'none';
        updateTotals();
        showNotification('ƒê√£ h·ªßy √°p d·ª•ng m√£ gi·∫£m gi√°.', 'success');
    });

    function applyVoucher(code) {
        const voucher = activeVouchers.find(v => v.code === code);
        if (!voucher) {
            showNotification('M√£ voucher kh√¥ng kh·∫£ d·ª•ng!', 'error');
            return;
        }
        let selectedSubTotal = 0;
        document.querySelectorAll('.item-checkbox:checked').forEach(function(checkbox) {
            const row = checkbox.closest('.cart-item');
            const price = parseFloat(row.getAttribute('data-price'));
            const quantity = parseInt(row.querySelector('.qty-input').value);
            selectedSubTotal += price * quantity;
        });
        let discount = 0;
        if (voucher.discount_type === 'percentage') {
            if (voucher.min_order_value && selectedSubTotal < voucher.min_order_value) {
                showNotification(
                    `ƒê∆°n h√†ng ph·∫£i t·ª´ ${voucher.min_order_value.toLocaleString('vi-VN')}‚Ç´ ƒë·ªÉ √°p d·ª•ng voucher n√†y!`,
                    'error');
                return;
            }
            discount = selectedSubTotal * (voucher.discount_value / 100);
            if (voucher.max_discount_value && discount > voucher.max_discount_value) {
                discount = voucher.max_discount_value;
            }
        } else if (voucher.discount_type === 'fixed') {
            discount = parseFloat(voucher.discount_value);
        }
        window.appliedDiscount = discount;
        document.getElementById('voucher-info').style.display = 'block';
        document.getElementById('voucher-code-display').innerText = voucher.code;
        document.getElementById('voucher-discount-display').innerText = discount.toLocaleString('vi-VN');
        updateTotals();
        showNotification('ƒê√£ √°p d·ª•ng m√£ gi·∫£m gi√°', 'success');
    }

    // Toggle danh s√°ch voucher
    document.getElementById('toggle-voucher-list')?.addEventListener('click', function() {
        const voucherItems = document.querySelectorAll('.voucher-item.hidden-voucher');
        const isHidden = voucherItems[0].style.display === 'none' || voucherItems[0].style.display === '';
        voucherItems.forEach(function(item) {
            item.style.display = isHidden ? 'list-item' : 'none';
        });
        this.innerHTML = isHidden ? 'Thu g·ªçn <i class="fas fa-chevron-up"></i>' :
            'Xem th√™m <i class="fas fa-chevron-down"></i>';
    });

    // X·ª≠ l√Ω x√≥a s·∫£n ph·∫©m
    document.querySelectorAll('.btn-delete').forEach(function(btn) {
        btn.addEventListener('click', function() {
            const cartId = this.getAttribute('data-cart-id');
            deleteCartItem(cartId, this);
        });
    });

    function deleteCartItem(cartId, buttonElement) {
        fetch("{{ route('customer.cart.delete', '') }}/" + cartId, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': "{{ csrf_token() }}"
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log('S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a.');
                    const row = buttonElement.closest('.cart-item');
                    row.remove();
                    updateTotals();
                    showNotification('S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi gi·ªè h√†ng.', 'success');
                } else {
                    showNotification('C√≥ l·ªói khi x√≥a s·∫£n ph·∫©m: ' + (data.message || 'Kh√¥ng r√µ l·ªói'), 'error');
                }
            })
            .catch(error => {
                console.error('L·ªói:', error);
                showNotification('C√≥ l·ªói x·∫£y ra khi x√≥a s·∫£n ph·∫©m.', 'error');
            });
    }

    // Toggle th√¥ng tin ng∆∞·ªùi d√πng

    // X·ª≠ l√Ω popup ƒëi·ªÅu kho·∫£n
    const termsPopup = document.getElementById('terms-popup');
    const termsLink = document.getElementById('terms-link');
    const agreeCheckbox = document.getElementById('agree');
    const closeTerms = document.getElementById('close-terms');

    function showTermsPopup() {
        termsPopup.style.display = 'flex';
    }

    termsLink.addEventListener('click', function(e) {
        e.preventDefault();
        showTermsPopup();
    });

    agreeCheckbox.addEventListener('change', function() {
        if (this.checked) {
            showTermsPopup();
        }
    });

    closeTerms.addEventListener('click', function() {
        termsPopup.style.display = 'none';
    });

    // ƒê√≥ng popup khi nh·∫•p ra ngo√†i n·ªôi dung
    termsPopup.addEventListener('click', function(e) {
        if (e.target === termsPopup) {
            termsPopup.style.display = 'none';
        }
    });

    // Kh·ªüi t·∫°o t·ªïng ti·ªÅn
    updateTotals();
</script>

<style>
    .cart-container {
        max-width: 1400px;
        margin: auto;
        padding: 2rem 1rem;
    }

    .page-title {
        text-align: center;
        font-size: 2rem;
        margin-bottom: 2rem;
        font-weight: 700;
        color: #f1f1f1;
    }

    .cart-info {
        font-size: 1rem;
        color: #f1f1f1;
        margin-bottom: 1rem;
    }

    .btn-remove-voucher {
        border: 2px #e0d9d9 solid;
        padding: 3px 9px;
        border-radius: 8px;
        background-color: #6f42c1;
        color: white;
    }

    .product-table tr>th {
        text-align: center;
    }

    .variant-selectors {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 0.5rem;
    }

    .variant-color,
    .variant-storage {
        padding: 0.4rem;
        border: 1px solid #555;
        border-radius: 6px;
        background-color: #1e1e1e;
        color: #f1f1f1;
    }

    .spinner {
        margin-left: 0.5rem;
        color: #6f42c1;
    }

    .item-checkbox {
        margin-right: 10px;
    }

    .btn-delete {
        background: none;
        border: none;
        color: #ff4d4f;
        cursor: pointer;
        padding: 5px;
        font-size: 16px;
        transition: color 0.3s;
        margin-top: 0.5rem;
        display: block;
    }

    .btn-delete:hover {
        color: #cc0000;
    }

    .final-total {
        margin-top: 1rem;
    }

    .main-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1rem;
    }

    @media (min-width: 992px) {
        .main-grid {
            grid-template-columns: 2fr 1fr;
        }
    }

    .left-col {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .product-list-container {
        overflow: hidden;
        border-radius: 8px;
        border: 1px solid #333;
    }

    .product-table {
        width: 100%;
        border-collapse: collapse;
    }

    .product-table thead {
        display: table;
        width: 100%;
        table-layout: fixed;
        background-color: #333;
    }

    .product-table thead tr th {
        padding: 0.75rem;
        color: #f1f1f1;
        font-size: 0.9rem;
    }

    .product-table tbody {
        display: block;
        max-height: 250px;
        overflow-y: auto;
        width: 100%;
    }

    .product-table tbody::-webkit-scrollbar {
        width: 6px;
    }

    .product-table tbody::-webkit-scrollbar-track {
        background: #2e2e2e;
        border-radius: 3px;
    }

    .product-table tbody::-webkit-scrollbar-thumb {
        background: #6f42c1;
        border-radius: 3px;
    }

    .product-table tbody tr {
        display: table;
        width: 100%;
        table-layout: fixed;
        background-color: #1e1e1e;
        border-bottom: 1px solid #333;
    }

    .product-table tbody tr:last-child {
        border-bottom: none;
    }

    .product-table tbody tr td {
        padding: 1rem;
        vertical-align: middle;
        font-size: 0.9rem;
        color: #f1f1f1;
        text-align: center;
    }

    .product-cell {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .product-image {
        width: 70px;
        height: 70px;
        border-radius: 8px;
        object-fit: cover;
        border: 1px solid #444;
    }

    .product-details {
        flex: 1;
        text-align: left;
    }

    .product-name {
        font-weight: 600;
        color: #fff;
    }

    .quantity-control {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 0.5rem;
    }

    .qty-input {
        width: 60px;
        padding: 0.4rem;
        border: 1px solid #555;
        border-radius: 6px;
        text-align: center;
        background-color: #1e1e1e;
        color: #f1f1f1;
    }

    .btn-decrease,
    .btn-increase {
        width: 30px;
        height: 30px;
        border: none;
        background: #6f42c1;
        color: #fff;
        border-radius: 15%;
        cursor: pointer;
    }

    .price-cell {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .price {
        color: #ff6f61;
        font-weight: bold;
    }

    .item-subtotal {
        color: #ff6f61;
        font-weight: bold;
    }

    .total-amount {
        text-align: right;
        font-size: 1.1rem;
        font-weight: 600;
        color: #fff;
    }

    .right-col {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .payment-voucher-section .card {
        background-color: #1e1e1e;
    }

    .section-title {
        text-align: center;
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        color: #fff;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-group label {
        font-weight: 600;
        margin-bottom: 0.5rem;
        display: block;
        color: #f1f1f1;
    }

    .form-input {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 1px solid #555;
        border-radius: 8px;
        transition: all 0.3s ease;
        background-color: #121212;
        color: #f1f1f1;
    }

    .form-input:focus {
        border-color: #6f42c1;
        box-shadow: 0 0 6px rgba(111, 66, 193, 0.4);
        outline: none;
    }

    .payment-method .radio-group {
        display: flex;
        gap: 1.5rem;
        margin-top: 0.5rem;
    }

    .radio-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #f1f1f1;
    }

    .voucher-group {
        display: flex;
        gap: 0.5rem;
    }

    .btn-apply-voucher {
        padding: 0.5rem 1rem;
        background-color: #6f42c1;
        color: #fff;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        transition: background 0.3s;
    }

    .btn-apply-voucher:hover {
        background-color: #59329c;
    }

    .voucher-list h4 {
        margin-bottom: 0.5rem;
        color: #fff;
    }

    .voucher-list ul {
        list-style: none;
        padding: 0;
    }

    .voucher-list li {
        margin-bottom: 0.5rem;
        color: #f1f1f1;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0.5rem;
        border: 1px solid #333;
        border-radius: 4px;
        font-size: 11px;
    }

    .btn-use-voucher {
        padding: 0.25rem 0.75rem;
        background-color: transparent;
        border: 1px solid #6f42c1;
        color: #6f42c1;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s, color 0.3s;
    }

    .btn-use-voucher:hover {
        background-color: #6f42c1;
        color: #fff;
    }

    .voucher-item.hidden-voucher {
        display: none;
    }

    .btn-toggle-voucher {
        background: none;
        border: none;
        color: #6f42c1;
        cursor: pointer;
        font-size: 1rem;
        margin-top: 0.5rem;
    }

    .voucher-info {
        background-color: #e6ffed;
        border: 1px solid #b7eb8f;
        padding: 0.75rem;
        border-radius: 8px;
        margin-bottom: 1rem;
        font-size: 0.9rem;
        color: #2e7d32;
        margin-top: 10px;
    }

    .agree-check {
        margin-bottom: 1.5rem;
        color: #fff;
    }

    .terms-link {
        color: #6f42c1;
        text-decoration: underline;
        cursor: pointer;
    }

    .terms-link:hover {
        color: #59329c;
    }

    .btn-checkout {
        width: 100%;
        padding: 0.85rem;
        border: none;
        border-radius: 8px;
        background-color: #6f42c1;
        color: #fff;
        font-size: 1rem;
        font-weight: 600;
        transition: background 0.3s ease;
        cursor: pointer;
    }

    .btn-checkout:hover {
        background-color: #59329c;
    }

    .user-info-section .card {
        background-color: #1e1e1e;
    }

    .final-amount {
        margin: 0 0 10px 0;
    }

    .payment-card,
    .user-info-card {
        background-color: #242424;
        border: 1px solid #333;
        border-radius: 10px;
        padding: 0.5rem;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
    }

    .user-info-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .toggle-user-info {
        background: none;
        border: none;
        color: #6f42c1;
        font-size: 1.2rem;
        cursor: pointer;
        transition: transform 0.3s;
    }

    .notification-container {
        position: fixed;
        top: 70px;
        right: 20px;
        z-index: 100000;
        width: 250px;
    }

    .notification {
        background-color: #1e1e1e;
        color: #f1f1f1;
        padding: 1rem;
        margin-bottom: 10px;
        border-radius: 8px;
        border: 1px solid #333;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
        opacity: 0;
        transform: translateX(100%);
        transition: all 0.5s ease-in-out;
    }

    .notification.success {
        background-color: #2e7d32;
        border-color: #b7eb8f;
    }

    .notification.error {
        background-color: #dc3545;
        border-color: #ff6f61;
    }

    .notification.show {
        opacity: 1;
        transform: translateX(0);
    }

    /* Popup Styles */
    .popup {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        z-index: 1000;
        justify-content: center;
        align-items: center;
    }

    .popup-content {
        background-color: #1e1e1e;
        padding: 2rem;
        border-radius: 10px;
        width: 90%;
        max-width: 1000px;
        max-height: 80vh;
        overflow-y: auto;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.5);
        position: relative;
    }

    .popup-content h2 {
        color: #f1f1f1;
        font-size: 1.8rem;
        margin-bottom: 1.5rem;
        text-align: center;
    }

    .terms-content {
        color: #f1f1f1;
        font-size: 0.95rem;
        line-height: 1.6;
    }

    .terms-content p {
        margin-bottom: 1rem;
    }

    .btn-close-popup {
        display: block;
        margin: 1.5rem auto 0;
        padding: 0.5rem 1.5rem;
        background-color: #6f42c1;
        color: #fff;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        transition: background 0.3s;
    }

    .btn-close-popup:hover {
        background-color: #59329c;
    }

    .product-name {
        display: block;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>
